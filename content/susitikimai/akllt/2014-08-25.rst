Pythond dirbtuvės 2014-08-25
############################

:date: 2014-08-25
:modified: 2014-08-25
:tags: akl.lt
:slug: susitikimai/akllt/2014-08-25
:authors: sirex

Vaizdo įrašas:

    https://plus.google.com/b/100498232048160629661/events/c6l8k6oms94ur3uiqtrkoci76v0

Šis susitikimas vyko `Linux branduolio 23 metų gimtadienis`_ metu. Sveikinu
Linux branduolį su gimtadieniu!

Mums sekėsi prastokai. Iškilo problemų dėl prisijungimo prie `Hangout on Air`_.
Programuodami darėme labai žioplas klaidas ir užtrukome jų ieškodami.

Vis dėl to projekte naudojamų priemonių integracija ir konfigūravimas
kelia daugiau problemų, nei naudos, todėl sutarėme, kad įrankių
integraciją pasidarysiu pats ir sekantį kartą galėsime pradėti
programuoti, negaišdami laiko, tikėtina tinkamai sukonfigūruotoje
projekto aplinkoje.

Visus konfigūracijos ir integracijos pakeitimus darau atskiroje šakoje:

    https://github.com/python-dirbtuves/akl.lt/compare/project-configuration

Kam įdomu, galite peržiūrėti ką keičiau, pakomentuoti, ar patobulinti.
Iki sekančio susitikimo, pakeitimus suliesiu su master šaka.

Vakar sutaisiau Bower integraciją, prijungiau pathlib biblioteką,
patobulinau Makefile. Liko prijungti `django-compressor`_ su libsass
filtru, RequireJS ir linterį.


Vakarykščio susitikimo metu, norėdami išvengti laiko gaišinimo, „ūkiškai“
sukėlėme į projektą statinius failus naudodami ``hexagonit.recipe.download``
[1]_ buildout receptą.

Tada sugaišome nemažai laiko, tvarkydami statinių failų kelius. Statinių
failų keliai konfigūruojami šių nustatymų pagalba:

STATIC_ROOT
    Nurodo fizinę vietą kompiuteryje ar serveryje, kur guli statiniai failai.
    Iš šios vietos statiniai failai bus surenkami ``collectstatic`` [3]_
    komandos pagalba. Taip, pat šioje vietoje failų ieškos
    ``django.contrib.staticfiles.views.serve`` viewas [4]_, naudojamas
    programuojant, vietoje tikro statinių failų serverio.

STATIC_URL
    URL adresas iki statinių failų. Adresas gali būti tiek lokalus, tiek
    išorinis, jei naudojamas CDN [5]_. Šį nustatymą taip pat naudoja ``static``
    šablono žymė [6]_.

STATICFILES_DIRS
    Šis nustatymas leidžia nurodyti sąrašą kitų vietų, kuriose ieškoti
    statinių failų. Mūsų atveju, kadangi statinius failus atsiuntėme
    naudodami hexagonit.recipe.download [1]_ receptą, reikėjo nurodyti
    kelius iki atsiųstų failų.

Nepaisant to, kad visus nustatymus nurodėme teisingai iš pirmo karto,
suklydome nurodydami teisingą kelią iki statinių failų pačiame šablone.
Tai mums kainavo gerą pusvalandį laiko, ieškant klaidos.

Toliau, panaudodami z3c.recipe.tag [7]_ receptą, pasidarėme automatinį
ctags [8]_ failų generavimą. Tačiau deja, Sublime teksto redaktorius
nepripažino nei vieno iš z3c.recipe.tag siūlomų tags failo variantų. Gal
kam nors iš Sublime naudotojų pavyko tai išsiaiškinti?

Galiausiai priėjome prie realaus programavimo, tiksliau pradėjome kurti
``base.html`` šabloną panaudodami Bootstrap grid karkasą [10]_.

Pradėjome rašyti CSS stilių failą. Iki pirmadienio planuoju stilių
failus pakeisti į SASS [11]_. Šiais laikais, niekas žalio CSS jau senai
neberašo... :)

SASS, vietoj LESS [12]_, siūlau naudoti todėl, kad SASS buvo perrašytas
su C/C++ kalba [13]_, tai žymiai palengvina integraciją su Python [14]_.
Be to, Twitter Bootstrap taip turi SASS variantą [15]_. Žodžiu, nuožmioje
SASS vs LESS kovoje, panašu, kad SASS po truputį laimi.

Vienas iš dalyvių, skundėsi, kad leidžiant tokią komandą::

    sudo python setup.py install

Jam neįsidiegia projektas. Tai parodo, koks prastas mūsų README.rst
failas, kuriame nėra nieko parašyta apie tai, kaip pasileisti projektą!
Reikės būtinai pasitaisyti. Paaiškinimas, kodėl ši, iš pirmo žvilgsnio
teisinga, python paketų diegimo komanda neveikia, būtų toks: mūsų
projektas turi būti leidžiamas tik izoliuotoje virtualenv + nodeenv +
zc.buildout aplinkoje. Izoliuota aplinka leidžia lanksčiau kontroliuoti
išorines priklausomybes ir visą projekto aplinką. Teisingas būdas
pasileisti projektą yra toks::

    make run


Sekantį kartą, atkritus integracijos darbams, reikia tikėtis darbas vyks
sklandžiai ir greitai.


.. [1] https://pypi.python.org/pypi/hexagonit.recipe.download
.. [2] https://docs.djangoproject.com/en/1.7/ref/settings/#static-root
.. [3] https://docs.djangoproject.com/en/1.7/ref/contrib/staticfiles/#collectstatic
.. [4] https://docs.djangoproject.com/en/1.7/ref/contrib/staticfiles/#static-file-development-view
.. [5] http://en.wikipedia.org/wiki/Content_delivery_network
.. [6] https://docs.djangoproject.com/en/1.7/ref/contrib/staticfiles/#static
.. [7] https://pypi.python.org/pypi/z3c.recipe.tag
.. [8] http://ctags.sourceforge.net/
.. [9] http://www.sublimetext.com/
.. [10] http://getbootstrap.com/css/#grid
.. [11] http://sass-lang.com/
.. [12] http://lesscss.org/
.. [13] http://sass-lang.com/libsass
.. [14] https://pypi.python.org/pypi/libsass
.. [15] http://getbootstrap.com/css/#sass
.. _`Linux branduolio 23 metų gimtadienis`: http://www.gatorlug.org/node/208 
.. _`Hangout on Air`: http://www.google.com/+/learnmore/hangouts/onair.html
.. _`django-compressor`: https://pypi.python.org/pypi/django_compressor
